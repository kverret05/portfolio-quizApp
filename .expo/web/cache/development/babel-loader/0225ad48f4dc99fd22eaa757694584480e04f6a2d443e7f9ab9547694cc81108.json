{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HintMessage(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showHint = _useState2[0],\n    setShowHint = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    hintCount = _useState4[0],\n    setHintCount = _useState4[1];\n  var maxHints = 2;\n  var showHintMessage = function showHintMessage() {\n    if (hintCount < maxHints) {\n      setShowHint(true);\n      setHintCount(hintCount + 1);\n    }\n  };\n  var hideHintMessage = function hideHintMessage() {\n    setShowHint(false);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Hint\",\n      onPress: showHintMessage\n    }), _jsxs(Modal, {\n      visible: showHint,\n      onRequestClose: hideHintMessage,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          children: props.hint\n        }), _jsxs(Text, {\n          children: [\"Number of hints used: \", hintCount]\n        })]\n      }), hintCount >= maxHints && _jsx(Text, {\n        children: \"You have used all your hints for this question.\"\n      }), _jsx(Button, {\n        title: \"Close\",\n        onPress: hideHintMessage\n      })]\n    })]\n  });\n}\nexport default HintMessage;","map":{"version":3,"names":["React","useState","View","Text","Modal","Button","jsx","_jsx","jsxs","_jsxs","HintMessage","props","_useState","_useState2","_slicedToArray","showHint","setShowHint","_useState3","_useState4","hintCount","setHintCount","maxHints","showHintMessage","hideHintMessage","children","title","onPress","visible","onRequestClose","hint"],"sources":["/Users/katverret/Documents/quizApp/components/HintMessage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Modal, Button } from 'react-native';\n\nfunction HintMessage(props) {\n  const [showHint, setShowHint] = useState(false);\n  const [hintCount, setHintCount] = useState(0);\n\n  const maxHints = 2;\n\n  const showHintMessage = () => {\n    if (hintCount < maxHints) {\n      setShowHint(true);\n      setHintCount(hintCount + 1);\n    }\n  };\n\n  const hideHintMessage = () => {\n    setShowHint(false);\n  };\n\n  return (\n    <View>\n      <Button title=\"Hint\" onPress={showHintMessage} />\n      <Modal visible={showHint} onRequestClose={hideHintMessage}>\n        <View>\n          <Text>{props.hint}</Text>\n          <Text>Number of hints used: {hintCount}</Text>\n        </View>\n        {hintCount >= maxHints && (\n          <Text>You have used all your hints for this question.</Text>\n        )}\n        <Button title=\"Close\" onPress={hideHintMessage} />\n      </Modal>\n    </View>\n  );\n}\n\nexport default HintMessage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAkChB,QAAQ,CAAC,CAAC,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,QAAQ,GAAG,CAAC;EAElB,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAIH,SAAS,GAAGE,QAAQ,EAAE;MACxBL,WAAW,CAAC,IAAI,CAAC;MACjBI,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BP,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,OACEP,KAAA,CAACP,IAAI;IAAAsB,QAAA,GACHjB,IAAA,CAACF,MAAM;MAACoB,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEJ;IAAgB,EAAG,EACjDb,KAAA,CAACL,KAAK;MAACuB,OAAO,EAAEZ,QAAS;MAACa,cAAc,EAAEL,eAAgB;MAAAC,QAAA,GACxDf,KAAA,CAACP,IAAI;QAAAsB,QAAA,GACHjB,IAAA,CAACJ,IAAI;UAAAqB,QAAA,EAAEb,KAAK,CAACkB;QAAI,EAAQ,EACzBpB,KAAA,CAACN,IAAI;UAAAqB,QAAA,GAAC,wBAAsB,EAACL,SAAS;QAAA,EAAQ;MAAA,EACzC,EACNA,SAAS,IAAIE,QAAQ,IACpBd,IAAA,CAACJ,IAAI;QAAAqB,QAAA,EAAC;MAA+C,EACtD,EACDjB,IAAA,CAACF,MAAM;QAACoB,KAAK,EAAC,OAAO;QAACC,OAAO,EAAEH;MAAgB,EAAG;IAAA,EAC5C;EAAA,EACH;AAEX;AAEA,eAAeb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}