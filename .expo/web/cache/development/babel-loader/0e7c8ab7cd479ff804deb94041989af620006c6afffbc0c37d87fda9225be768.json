{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ButtonGroup } from 'react-native-elements';\nimport { styles } from \"../App\";\nimport HintMessage from \"./components/HintMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var data = [{\n  type: \"multiple-choice\",\n  prompt: 'How many signs are there in the zodiac?',\n  choices: ['6', '12', '18', '24'],\n  correct: 1,\n  hint: \"Think of how many days are in a year\"\n}, {\n  type: \"multiple-answer\",\n  prompt: 'What zodiac signs are considered \"fixed signs\"?',\n  choices: ['Taurus', 'Gemini', 'Libra', 'Aquarius'],\n  correct: [0, 3],\n  hint: \"Fixed signs fall in the middle of a season\"\n}, {\n  type: \"true-false\",\n  prompt: 'If you were born on September 16, you are a Virgo',\n  choices: ['true', 'false'],\n  correct: 0,\n  hint: \"Libras and Virgos are born in September, just depending on the day of the month\"\n}];\nfunction Question(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  console.log(route.params);\n  var _route$params = route.params,\n    questionNumber = _route$params.questionNumber,\n    userChoices = _route$params.userChoices,\n    data = _route$params.data;\n  var _data$questionNumber = data[questionNumber],\n    choices = _data$questionNumber.choices,\n    prompt = _data$questionNumber.prompt,\n    type = _data$questionNumber.type;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedIndex = _useState2[0],\n    setSelectedIndex = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedIndexes = _useState4[0],\n    setSelectedIndexes = _useState4[1];\n  var nextQuestion = function nextQuestion() {\n    var nextQuestion = questionNumber + 1;\n    console.log(selectedIndex);\n    if (type !== \"multiple-answer\") {\n      userChoices.push(selectedIndex);\n    } else {\n      userChoices.push(selectedIndexes);\n    }\n    if (nextQuestion < data.length) {\n      console.log(\"Navigating to next question\");\n      console.log({\n        questionNumber: nextQuestion,\n        data: data,\n        userChoices: userChoices\n      });\n      navigation.navigate(\"Question\", {\n        questionNumber: nextQuestion,\n        data: data,\n        userChoices: userChoices\n      });\n    } else {\n      navigation.navigate(\"Summary\", {\n        data: data,\n        userChoices: userChoices\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: prompt\n    }), type !== \"multiple-answer\" ? _jsx(ButtonGroup, {\n      textID: \"choices\",\n      buttons: choices,\n      vertical: true,\n      selectedIndex: selectedIndex,\n      onPress: function onPress(value) {\n        console.log(value);\n        console.log(selectedIndex);\n        setSelectedIndex(value);\n      },\n      containerStyle: {\n        margin: 20,\n        width: \"70%\"\n      }\n    }) : _jsx(ButtonGroup, {\n      testID: \"choices\",\n      buttons: choices,\n      vertical: true,\n      selectMultiple: true,\n      selectedIndexes: selectedIndexes,\n      onPress: function onPress(value) {\n        if (selectedIndexes.includes(value)) {\n          setSelectedIndexes(selectedIndexes.filter(function (i) {\n            return i !== value;\n          }));\n        } else {\n          setSelectedIndexes(selectedIndexes.concat(value));\n        }\n      },\n      containerStyle: {\n        margin: 20,\n        width: \"70%\"\n      }\n    }), _jsx(Button, {\n      testID: \"next-question\",\n      onPress: nextQuestion,\n      title: \"Submit\"\n    })]\n  });\n}\nexport default Question;","map":{"version":3,"names":["React","useState","View","Text","Button","ButtonGroup","styles","HintMessage","jsx","_jsx","jsxs","_jsxs","data","type","prompt","choices","correct","hint","Question","_ref","navigation","route","console","log","params","_route$params","questionNumber","userChoices","_data$questionNumber","_useState","_useState2","_slicedToArray","selectedIndex","setSelectedIndex","_useState3","_useState4","selectedIndexes","setSelectedIndexes","nextQuestion","push","length","navigate","style","container","children","textID","buttons","vertical","onPress","value","containerStyle","margin","width","testID","selectMultiple","includes","filter","i","concat","title"],"sources":["/Users/katverret/Documents/quizApp/components/Question.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { ButtonGroup } from 'react-native-elements';\nimport { styles } from '../App';\nimport HintMessage from './components/HintMessage';\n\nexport const data = [\n  {\n    type: \"multiple-choice\",\n    prompt: 'How many signs are there in the zodiac?',\n    choices: ['6', '12', '18', '24'],\n    correct: 1,\n    hint: \"Think of how many days are in a year\",\n  },\n  {\n    type: \"multiple-answer\",\n    prompt: 'What zodiac signs are considered \"fixed signs\"?',\n    choices: ['Taurus', 'Gemini', 'Libra', 'Aquarius'],\n    correct: [0, 3],\n    hint: \"Fixed signs fall in the middle of a season\"\n  },\n  {\n    type: \"true-false\",\n    prompt: 'If you were born on September 16, you are a Virgo',\n    choices: ['true', 'false'],\n    correct: 0,\n    hint: \"Libras and Virgos are born in September, just depending on the day of the month\"\n  }\n];\n\nfunction Question({ navigation, route }) {\n  console.log(route.params)\n  const { questionNumber, userChoices, data } = route.params;\n  let { choices, prompt, type } = data[questionNumber]\n  let [selectedIndex, setSelectedIndex] = useState(0)\n  let [selectedIndexes, setSelectedIndexes] = useState([])\n  let nextQuestion = () => {\n    let nextQuestion = questionNumber + 1\n    console.log(selectedIndex)\n    if (type !== \"multiple-answer\") {\n      userChoices.push(selectedIndex)\n    } else {\n      userChoices.push(selectedIndexes)\n    }\n\n    if (nextQuestion < data.length) {\n      console.log(\"Navigating to next question\")\n      console.log({\n        questionNumber: nextQuestion,\n        data, userChoices\n      })\n      navigation.navigate(\"Question\", {\n        questionNumber: nextQuestion,\n        data,\n        userChoices\n      })\n    } else {\n      navigation.navigate(\"Summary\", {\n        data,\n        userChoices\n      })\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>{prompt}</Text>\n      {type !== \"multiple-answer\" ? (\n        <ButtonGroup\n          textID=\"choices\"\n          buttons={choices}\n          vertical\n          selectedIndex={selectedIndex}\n          onPress={(value) => {\n            console.log(value);\n            console.log(selectedIndex);\n            setSelectedIndex(value);\n          }}\n          containerStyle={{ margin: 20, width: \"70%\" }}\n        />\n      ) : (\n        <ButtonGroup\n          testID=\"choices\"\n          buttons={choices}\n          vertical\n          selectMultiple\n          selectedIndexes={selectedIndexes}\n          onPress={(value) => {\n            if (selectedIndexes.includes(value)) {\n              setSelectedIndexes(selectedIndexes.filter((i) => i !== value));\n            } else {\n              setSelectedIndexes(selectedIndexes.concat(value));\n            }\n          }}\n          containerStyle={{ margin: 20, width: \"70%\" }}\n        />\n\n      )}\n      <Button\n        testID=\"next-question\"\n        onPress={nextQuestion}\n        title=\"Submit\"\n      ></Button>\n    </View>\n  );\n}\n\nexport default Question;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}